grammar Lucene

  rule body
    (expression / space)* <Body>
  end

  rule expression
    #operationbinary_op / not_op / required_op / group / term
    operation / group / term
  end

  rule group
    space? '(' body ')' space? <Group>
  end

  rule operation
    binary_op / unary_op
  end

  rule unary_op
    not_op / required_op / prohibited_op
  end

  rule binary_op
    (group / term) space? boolean_operator space+ body <BinaryOp>
  end

  rule boolean_operator
    and_operator / or_operator
  end

  rule and_operator
    'AND' <AndOperator> / '&&' <AndOperator>
  end

  rule or_operator
    'OR' <OrOperator> / '||' <OrOperator>
  end

  rule not_op
    not_operator space (group / term) <UnaryOp>
  end

  rule not_operator
    'NOT' <NotOperator>
  end

  rule required_op
    required_operator term <UnaryOp>
  end
  
  rule required_operator
    '+' <RequiredOperator>
  end

  rule prohibited_op
    prohibited_operator term <UnaryOp>
  end

  rule prohibited_operator
    '-' <ProhibitedOperator>
  end

  rule term
    !(boolean_operator / not_operator) [a-zA-Z0-9_-]+ <Term> 
  end

  rule space
    [\s]+
  end
end
